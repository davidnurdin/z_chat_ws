{% extends 'base.html.twig' %}

{% block title %}Hello HomeController!{% endblock %}

{% block body %}
<style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
</style>

<div class="example-wrapper">

    <input type="button" id="btn1" value="Authenticate" onclick="authenticate()">
    <input type="button" id="btn2" value="Enter Room" onclick="enterRoom(document.getElementById('goroom').value)">
    <input type="button" id="btn3" value="Write COUCOU to ROOM" onclick="writeRoom('coucou')">
    <input type="button" id="btn4" value="get ROOMS list" onclick="getRoomsList()">
    <input type="button" id="btn5" value="Write COUCOU to user1" onclick="writePrivate('coucou','user1')">


    <br>
    <input type="text" id="login" value="user1" />
    <input type="text" id="goroom" value="general" />
    <textarea id="debug" cols="130" rows="10"></textarea>

    <textarea id="listUser" cols="130" rows="10"></textarea>
    <textarea id="room" cols="130" rows="10"></textarea>
    <textarea id="roomsList" cols="130" rows="10"></textarea>



    <script>

        function getRoomsList()
        {
            // send from socket a packet to get rooms list in JSON
            let trame = {'type': 'getRoomsList'};
            socket.send(JSON.stringify(trame));
            document.getElementById('debug').value += "Get rooms list sent...\n";
        }

        function writePrivate(message,to)
        {
            let trame = {'type': 'writePrivate', 'message': message, 'to': to};
            socket.send(JSON.stringify(trame));
            document.getElementById('debug').value += "Message " + message + " sent to " + to + "...\n";

        }
        function writeRoom(message) {
            // send from socket a packet to write in a room in JSON
            let trame = {'type': 'writeRoom', 'message': message};
            socket.send(JSON.stringify(trame));
            document.getElementById('debug').value += "Message " + message + " sent...\n";
        }

        function enterRoom(room) {
            // send from socket a packet to enter in a room in JSON
            let trame = {'type': 'enterRoom', 'name': room};
            socket.send(JSON.stringify(trame));
            document.getElementById('debug').value += "Enter room " + room + " sent...\n";

        }


        function authenticate() {
            // send from socket a packet to auth in JSON
            let trame = { 'type' : 'auth' , 'login' : document.getElementById('login').value , 'password' : 'pass' };
            socket.send(JSON.stringify(trame));
            document.getElementById('debug').value += "Authentication sent...\n";


        }
        // connect with wss on wss://localhost
        const socket = new WebSocket('wss://localhost/ws/chat');
        socket.addEventListener('open', function (event) {
            // socket.send('Hello Server!');
            document.getElementById('debug').value += "WebSocket is connected...\n";
        });
        socket.addEventListener('message', function (event) {

            let data = event.data;
            if (data instanceof Blob) {
                let reader = new FileReader();
                reader.onload = function() {
                    let text = reader.result;
                    json = JSON.parse(text);

                    console.log(json);

                    if (json.type == 'message')
                    {
                        document.getElementById('debug').value += json.payload + "\n" ;
                    }

                    if (json.type == 'auth')
                    {
                        if (json.status == 'ok')
                        {
                            document.getElementById('debug').value += "Authentication successful\n";
                            // send a message to the server
                            document.title = json.login ;
                        }
                        else
                        {
                            document.getElementById('debug').value += "Authentication failed\n";
                        }
                    }

                    if (json.type == 'enterRoom')
                    {
                        if (json.status == 'ok')
                        {
                            document.getElementById('debug').value += "Entered room successfully\n";
                        }
                        else
                        {
                            document.getElementById('debug').value += "Failed to enter room\n";
                        }
                    }

                    if (json.type == 'writeRoom')
                    {
                        if (json.status == 'ok')
                        {
                            document.getElementById('debug').value += "Message sent to room successfully\n";
                        }
                        else
                        {
                            document.getElementById('debug').value += "Failed to send message to room\n";
                        }
                    }

                    if (json.type == 'messageRoom')
                    {
                        document.getElementById('room').value += "Room " + json.name + " from " + json.from + " : " + json.payload + "\n";
                    }

                    if (json.type == 'listUserInRoom')
                    {
                        //console.log(json);
                        document.getElementById('listUser').value += "List of room (" + json.room + ") : " + json.list + "\n";
                    }

                    if (json.type == 'userInRoom')
                    {
                        document.getElementById('listUser').value += "IN ROOM : " + json.room + " => " + json.user + "\n";
                    }

                    if (json.type == 'userOutRoom')
                    {
                        document.getElementById('listUser').value += "OUT ROOM : " + json.room + " => " + json.user + "\n";
                    }

                    if (json.type == 'roomsList')
                    {
                        try {
                            const rooms = json.rooms || {};
                            const entries = Object.entries(rooms);
                            const text = entries.length
                                ? entries.map(([name, count]) => name + " (" + count + ")").join(", ")
                                : "none";
                            document.getElementById('roomsList').value = "Rooms list: " + text + "\n";
                        } catch (e) {
                            document.getElementById('roomsList').value = "Rooms list: [invalid payload]\n";
                        }
                    }


                };
                reader.readAsText(data);
                return;
            }

        });


    </script>
</div>
{% endblock %}
